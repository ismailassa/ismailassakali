{"version":3,"sources":["editable-stuff/config.js","components/home/MainBody.jsx","components/home/AboutMe.jsx","components/home/ProjectCard.jsx","components/home/Project.jsx","components/Footer.jsx","hooks/useIsomorphicLayoutEffect.js","hooks/useScrollPosition.js","hooks/useResizeObserver.js","components/Navbar.jsx","components/home/SkillsBar.jsx","components/home/SkillsTab.jsx","components/home/Skills.jsx","components/home/GetInTouch.jsx","components/home/Leadership.jsx","components/home/ExperienceCard.jsx","components/home/Experience.jsx","App.js","serviceWorker.js","index.js","editable-stuff/resume.pdf"],"names":["navBar","mainBody","gradientColors","firstName","middleName","lastName","message","icons","about","show","heading","imageSize","resume","repos","gitHubUsername","reposLength","specificRepos","leadership","images","width","height","skills","hardSkills","name","value","softSkills","getInTouch","experiences","data","MainBody","React","forwardRef","ref","gradient","title","Jumbotron","fluid","id","style","background","backgroundSize","className","Container","cursor","map","icon","index","key","target","rel","href","url","aria-label","image","split","pictureLinkRegex","RegExp","AboutMe","link","imgSize","useState","profilePicUrl","setProfilePicUrl","Boolean","showPic","setShowPic","useEffect","test","handleRequest","a","axios","get","response","graphql","user","profile_pic_url_hd","console","error","src","alt","CardButtons","svn_url","iconname","class","ProjectCard","description","stargazers_count","languages_url","pushed_at","Col","md","Card","Body","Title","as","Text","count","dummyProject","API","Project","username","dummyProjectsArr","length","specfic","Row","project","Footer","props","backgroundColor","children","useIsomorphicLayoutEffect","window","useLayoutEffect","isBrowser","getScrollPosition","element","useWindow","x","y","position","current","document","body","getBoundingClientRect","scrollX","scrollY","left","top","useScrollPosition","effect","deps","wait","useRef","throttleTimeout","callBack","currPos","prevPos","handleScroll","setTimeout","addEventListener","removeEventListener","clearTimeout","defaultProps","useResizeObserver","dimensions","setDimensions","observeTarget","resizeObserver","ResizeObserver","entries","forEach","entry","contentRect","observe","unobserve","Navigation","isTop","setIsTop","scrollPosition","setScrollPosition","navbarMenuRef","navbarDimensions","navBottom","bottom","offsetTop","Navbar","expand","Brand","Toggle","aria-controls","Collapse","Nav","Link","SkillsBar","skill","isScrolled","ProgressBar","now","SkillsSection","SkillsTab","xs","slice","Math","floor","Skills","skillsTabRef","setIsScrolled","Tabs","defaultActiveKey","Tab","tabClassName","eventKey","GetInTouch","email","Leadership","img","Carousel","Item","Caption","label","paragraph","ExperienceCard","lg","companylogo","role","date","Experience","company","Home","imageLink","App","titleRef","basename","path","exact","component","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.050abb4e.chunk.js","sourcesContent":["// Navigation Bar SECTION\r\nconst navBar = {\r\n  show: true,\r\n};\r\n\r\n// Main Body SECTION\r\nconst mainBody = {\r\n  gradientColors: \"#4484ce, #1ad7c0, #ff9b11, #9b59b6, #ff7f7f, #ecf0f1\",\r\n  firstName: \"Ismail\",\r\n  middleName: \"\",\r\n  lastName: \"Assakali\",\r\n  message: \"Gepassioneerde en leergierige IT student.\",\r\n  icons: [\r\n    // {\r\n    //   image: \"fa-github\",\r\n    //   url: \"https://github.com/hashirshoaeb\",\r\n    // },\r\n    // {\r\n    //   image: \"fa-facebook\",\r\n    //   url: \"https://www.facebook.com/hashirshoaeb\",\r\n    // },\r\n    // {\r\n    //   image: \"fa-instagram\",\r\n    //   url: \"https://www.instagram.com/hashirshoaeb/\",\r\n    // },\r\n    // {\r\n    //   image: \"fa-linkedin\",\r\n    //   url: \"https://www.linkedin.com/in/hashirshoaeb/\",\r\n    // },\r\n    // {\r\n    //   image: \"fa-twitter\",\r\n    //   url: \"https://www.twitter.com/hashirshoaeb/\",\r\n    // },\r\n  ],\r\n};\r\n\r\n// ABOUT SECTION\r\n// If you want the About Section to show a profile picture you can fill the profilePictureLink either with:\r\n//a) your Instagram username\r\n//      i.e:profilePictureLink:\"johnDoe123\",\r\n//b) a link to an hosted image\r\n//      i.e:profilePictureLink:\"www.picturesonline.com/johnDoeFancyAvatar.jpg\",\r\n//c) image in \"editable-stuff\" directory and use require(\"\") to import here,\r\n//      i.e: profilePictureLink: require(\"../editable-stuff/hashirshoaeb.png\"),\r\n//d) If you do not want any picture to be displayed, just leave it empty :)\r\n//      i.e: profilePictureLink: \"\",\r\n// For Resume either provide link to your resume or import from \"editable-stuff\" directory\r\n//     i.e resume: require(\"../editable-stuff/resume.pdf\"),\r\n//         resume: \"https://docs.google.com/document/d/13_PWdhThMr6roxb-UFiJj4YAFOj8e_bv3Vx9UHQdyBQ/edit?usp=sharing\",\r\n\r\nconst about = {\r\n  show: true,\r\n  heading: \"Over mezelf\",\r\n  //imageLink: require(\"../editable-stuff/hashirshoaeb.png\"),\r\n  imageSize: 375,\r\n  message:\r\n    \"Mijn naam is Ismail Assakali. Ik ben student toegepaste informatica aan Hogent. Ik heb een passie voor informatica en probeer verschillende domeinen uit om mijn kennis te vergroten. Momenteel vallen mijn interesses onder mobile hybride applicaties en webapplicaties! \",\r\n  resume: \"https://docs.google.com/document/d/13_PWdhThMr6roxb-UFiJj4YAFOj8e_bv3Vx9UHQdyBQ/edit?usp=sharing\",\r\n};\r\n\r\n// PROJECTS SECTION\r\n// Setting up project lenght will automatically fetch your that number of recently updated projects, or you can set this field 0 to show none.\r\n//      i.e: reposLength: 0,\r\n// If you want to display specfic projects, add the repository names,\r\n//      i.e [\"repository-1\", \"repo-2\"]\r\nconst repos = {\r\n  show: true,\r\n  heading: \"Projecten\",\r\n  gitHubUsername: \"ismailassa\", //i.e.\"johnDoe12Gh\"\r\n  reposLength: 4,\r\n  specificRepos: [],\r\n};\r\n\r\n// Leadership SECTION\r\nconst leadership = {\r\n  show: false,\r\n  heading: \"Leadership\",\r\n  message:\r\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Vitae auctor eu augue ut lectus arcu bibendum at varius. Libero justo laoreet sit amet cursus sit amet. Imperdiet dui accumsan sit amet nulla facilisi morbi. At auctor urna nunc id. Iaculis urna id volutpat lacus laoreet non curabitur gravida. Et magnis dis parturient montes nascetur ridiculus mus mauris. In nisl nisi scelerisque eu ultrices vitae auctor. Mattis nunc sed blandit libero volutpat sed cras ornare. Pulvinar neque laoreet suspendisse interdum consectetur libero.\",\r\n  images: [\r\n  ],\r\n  imageSize: {\r\n    width:\"615\",\r\n    height:\"450\"\r\n  }\r\n};\r\n\r\n// SKILLS SECTION\r\nconst skills = {\r\n  show: true,\r\n  heading: \"Skills\",\r\n  hardSkills: [\r\n    { name: \"Java\", value: 80 },\r\n    { name: \"C#\", value: 75 },\r\n    { name: \"HTML/CSS\", value: 75 },\r\n    { name: \"JavaScript\", value: 90 },\r\n    { name: \"React Native\", value: 75 },\r\n    { name: \"SQL\", value: 75 },\r\n  ],\r\n  softSkills: [\r\n    { name: \"Problem Solving\", value: 75 },\r\n    { name: \"Goal-Oriented\", value: 80 },\r\n    { name: \"Collaboration\", value: 90 },\r\n    { name: \"Positivity\", value: 75 },\r\n    { name: \"Adaptability\", value: 85 },\r\n    { name: \"Empathy\", value: 90 },\r\n    { name: \"Organization\", value: 70 },\r\n    { name: \"Creativity\", value: 90 },\r\n  ],\r\n};\r\n\r\n// GET IN TOUCH SECTION\r\nconst getInTouch = {\r\n  show: true,\r\n  heading: \"Contact\",\r\n  message:\r\n    \"\",//\"I'm currently looking for full-time Software Engineering or Machine Learning opportunities! If you know of any positions available, if you have any questions, or if you just want to say hi, please feel free to email me at\",\r\n  email: \"ismail.assakali@student.hogent.be\",\r\n};\r\n\r\nconst experiences = {\r\n  show: false,\r\n  heading: \"Experiences\",\r\n  data: [\r\n  ]\r\n}\r\n\r\n// Blog SECTION\r\n// const blog = {\r\n//   show: false,\r\n// };\r\n\r\nexport { navBar, mainBody, about, repos, skills, leadership, getInTouch, experiences };\r\n","import React from \"react\";\r\nimport Typist from \"react-typist\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\n\r\nconst MainBody = React.forwardRef(\r\n  ({ gradient, title, message, icons }, ref) => {\r\n    return (\r\n      <Jumbotron\r\n        fluid\r\n        id=\"home\"\r\n        style={{\r\n          background: `linear-gradient(136deg,${gradient})`,\r\n          backgroundSize: \"1200% 1200%\",\r\n        }}\r\n        className=\"title bg-transparent bgstyle text-light min-vh-100 d-flex align-content-center align-items-center flex-wrap m-0\"\r\n      >\r\n        <div id=\"stars\"></div>\r\n        <Container className=\"text-center\">\r\n          <h1 ref={ref} className=\"display-1\">\r\n            {title}\r\n          </h1>\r\n          <Typist className=\"lead typist\" cursor={{ show: false }}>\r\n            {\" \"}\r\n            {message}\r\n          </Typist>\r\n          <div className=\"p-5\">\r\n            {icons.map((icon, index) => (\r\n              <a\r\n                key={`social-icon-${index}`}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                href={icon.url}\r\n                aria-label={`My ${icon.image.split(\"-\")[1]}`}\r\n              >\r\n                <i className={`fab ${icon.image}  fa-3x socialicons`} />\r\n              </a>\r\n            ))}\r\n          </div>\r\n        </Container>\r\n      </Jumbotron>\r\n    );\r\n  }\r\n);\r\n\r\nexport default MainBody;\r\n","import React from \"react\";\r\nimport Pdf from \"../../editable-stuff/resume.pdf\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst pictureLinkRegex = new RegExp(\r\n  /[(http(s)?):(www.)?a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&//=]*)/\r\n);\r\n\r\nconst AboutMe = ({ heading, message, link, imgSize, resume }) => {\r\n  const [profilePicUrl, setProfilePicUrl] = React.useState(\"\");\r\n  const [showPic, setShowPic] = React.useState(Boolean(link));\r\n\r\n  React.useEffect(() => {\r\n    if (link && !pictureLinkRegex.test(link)) {\r\n      handleRequest();\r\n    } else {\r\n      setProfilePicUrl(link);\r\n    }\r\n  }, [link]);\r\n\r\n  const handleRequest = async () => {\r\n    const instaLink = \"https://www.instagram.com/\";\r\n    const instaQuery = \"/?__a=1\";\r\n    try {\r\n      const response = await axios.get(instaLink + link + instaQuery);\r\n      setProfilePicUrl(response.data.graphql.user.profile_pic_url_hd);\r\n    } catch (error) {\r\n      setShowPic(false);\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"aboutme\" className=\"jumbotron jumbotron-fluid m-0\">\r\n      <div className=\"container container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-5 d-none d-lg-block align-self-center\">\r\n            {showPic && (\r\n              <img\r\n                className=\"border border-secondary rounded-circle\"\r\n                src={profilePicUrl}\r\n                alt=\"profilepicture\"\r\n                width={imgSize}\r\n                height={imgSize}\r\n              />\r\n            )}\r\n          </div>\r\n\r\n          <div className={`col-lg-${showPic ? \"7\" : \"12\"}`}>\r\n            <h2 className=\"display-4 mb-5 text-center\">{heading}</h2>\r\n            <p className=\"lead text-center\">{message}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AboutMe;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport axios from \"axios\";\r\n\r\nconst ProjectCard = ({ value }) => {\r\n  const {\r\n    name,\r\n    description,\r\n    svn_url,\r\n    iconname,\r\n    stargazers_count,\r\n    languages_url,\r\n    pushed_at,\r\n  } = value;\r\n  return (\r\n    <Col md={6}>\r\n      <Card className=\"card shadow-lg p-3 mb-5 bg-white rounded\">\r\n        <Card.Body>\r\n          <Card.Title as=\"h5\">{name || <Skeleton />} </Card.Title>\r\n          <Card.Text>{(!description)?\"\":description || <Skeleton count={3} />} </Card.Text>\r\n          {svn_url ? <CardButtons svn_url={svn_url} /> : <Skeleton count={2} />}\r\n          <hr />\r\n          {/* {languages_url ? (\r\n            <Language languages_url={languages_url} repo_url={svn_url} />\r\n          ) : (\r\n            <Skeleton count={3} />\r\n          )} */}\r\n          {/* {value ? (\r\n            <CardFooter star_count={stargazers_count} repo_url={svn_url} pushed_at={pushed_at} />\r\n          ) : (\r\n            <Skeleton />\r\n          )} */}\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n  );\r\n};\r\n\r\nconst CardButtons = ({ svn_url,iconname }) => {\r\n  return (\r\n    <>\r\n      <a\r\n        href={`${svn_url}`}\r\n        target=\"_black\"\r\n        className=\"btn btn-outline-secondary mr-3\"\r\n      >\r\n        <i class=\"fas fa-star\"></i> Bekijk project\r\n      </a>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Language = ({ languages_url, repo_url }) => {\r\n  const [data, setData] = useState([]);\r\n\r\n  const handleRequest = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(languages_url);\r\n      return setData(response.data);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  }, [languages_url]);\r\n\r\n  useEffect(() => {\r\n    handleRequest();\r\n  }, [handleRequest]);\r\n\r\n  const array = [];\r\n  let total_count = 0;\r\n  for (let index in data) {\r\n    array.push(index);\r\n    total_count += data[index];\r\n  }\r\n\r\n  return (\r\n    <div className=\"pb-3\">\r\n      Languages:{\" \"}\r\n      {array.length\r\n        ? array.map((language) => (\r\n            <a\r\n              key={language} \r\n              className=\"badge badge-light card-link\"\r\n              href={repo_url + `/search?l=${language}`}\r\n              target=\" _blank\"\r\n            >\r\n              {language}:{\" \"}\r\n              {Math.trunc((data[language] / total_count) * 1000) / 10} %\r\n            </a>\r\n          ))\r\n        : \"code yet to be deployed.\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CardFooter = ({ star_count, repo_url, pushed_at }) => {\r\n  const [updated_at, setUpdated_at] = useState(\"0 mints\");\r\n\r\n  const handleUpdatetime = useCallback(() => {\r\n    const date = new Date(pushed_at);\r\n    const nowdate = new Date();\r\n    const diff = nowdate.getTime() - date.getTime();\r\n    const hours = Math.trunc(diff / 1000 / 60 / 60);\r\n\r\n    if (hours < 24) {\r\n      if (hours < 1) return setUpdated_at(\"just now\");\r\n      let measurement = hours === 1 ? \"hour\" : \"hours\";\r\n      return setUpdated_at(`${hours.toString()} ${measurement} ago`);\r\n    } else {\r\n      const options = { day: \"numeric\", month: \"long\", year: \"numeric\" };\r\n      const time = new Intl.DateTimeFormat(\"en-US\", options).format(date);\r\n      return setUpdated_at(`on ${time}`);\r\n    }\r\n  }, [pushed_at]);\r\n\r\n  useEffect(() => {\r\n    handleUpdatetime();\r\n  }, [handleUpdatetime]);\r\n\r\n  return (\r\n    <p className=\"card-text\">\r\n      <a\r\n        href={repo_url + \"/stargazers\"}\r\n        target=\" _blank\"\r\n        className=\"text-dark text-decoration-none\"\r\n      >\r\n        <span className=\"text-dark card-link mr-4\">\r\n          <i className=\"fab fa-github\" /> Stars{\" \"}\r\n          <span className=\"badge badge-dark\">{star_count}</span>\r\n        </span>\r\n      </a>\r\n      <small className=\"text-muted\">Updated {updated_at}</small>\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default ProjectCard;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport ProjectCard from \"./ProjectCard\";\r\nimport axios from \"axios\";\r\n\r\nconst dummyProject = {\r\n  name: \"WAVIIT\",\r\n  description: \"Sociale netwerk applicatie genaamd WAVIIT\",\r\n  svn_url: \"http://waviit.com/\",\r\n  stargazers_count: null,\r\n  pushed_at: null,\r\n};\r\nconst API = \"https://api.github.com\";\r\n// const gitHubQuery = \"/repos?sort=updated&direction=desc\";\r\n// const specficQuerry = \"https://api.github.com/repos/hashirshoaeb/\";\r\n\r\nconst Project = ({ heading, username, length, specfic }) => {\r\n  const allReposAPI = `${API}/users/${username}/repos?sort=updated&direction=desc`;\r\n  const specficReposAPI = `${API}/repos/${username}`;\r\n  const dummyProjectsArr = [dummyProject];\r\n\r\n  const [projectsArray, setProjectsArray] = useState([]);\r\n\r\n  // const fetchRepos = useCallback(async () => {\r\n  //   let repoList = [];\r\n  //   try {\r\n  //     // getting all repos\r\n  //     const response = await axios.get(allReposAPI);\r\n  //     // slicing to the length\r\n  //     repoList = [...response.data.slice(0, length)];\r\n  //     // adding specified repos\r\n  //     try {\r\n  //       for (let repoName of specfic) {\r\n  //         const response = await axios.get(`${specficReposAPI}/${repoName}`);\r\n  //         repoList.push(response.data);\r\n  //       }\r\n  //     } catch (error) {\r\n  //       console.error(error.message);\r\n  //     }\r\n  //     // setting projectArray\r\n  //     // TODO: remove the duplication.\r\n  //     setProjectsArray(repoList);\r\n  //   } catch (error) {\r\n  //     console.error(error.message);\r\n  //   }\r\n  // }, [allReposAPI, length, specfic, specficReposAPI]);\r\n\r\n  // useEffect(() => {\r\n  //   fetchRepos();\r\n  // }, [fetchRepos]);\r\n\r\n  return (\r\n    <Jumbotron fluid id=\"projects\" className=\"bg-light m-0\">\r\n      <Container className=\"\">\r\n        <h2 className=\"display-4 pb-5 text-center\">{heading}</h2>\r\n        <Row>\r\n          {dummyProjectsArr.map((project, index) => (\r\n            <ProjectCard\r\n              key={`dummy-${index}`}\r\n              id={`dummy-${index}`}\r\n              value={project}\r\n            />\r\n          ))}\r\n        </Row>\r\n      </Container>\r\n    </Jumbotron>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n","import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nconst Footer = (props) => {\r\n  const bgStyle = { backgroundColor: \"#f5f5f5\" };\r\n\r\n  return (\r\n    <footer style={bgStyle} className=\"mt-auto py-5 text-center \">\r\n      <Container>\r\n        {props.children}\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { useLayoutEffect, useEffect } from \"react\"\r\n\r\nexport const useIsomorphicLayoutEffect =\r\n  typeof window !== \"undefined\" ? useLayoutEffect : useEffect\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useRef } from \"react\";\r\nimport { useIsomorphicLayoutEffect } from \"./useIsomorphicLayoutEffect\";\r\n\r\nconst isBrowser = typeof window !== `undefined`;\r\n\r\nfunction getScrollPosition({ element, useWindow }) {\r\n  if (!isBrowser) return { x: 0, y: 0 };\r\n\r\n  const target = element ? element.current : document.body;\r\n  const position = target.getBoundingClientRect();\r\n\r\n  return useWindow\r\n    ? { x: window.scrollX, y: window.scrollY }\r\n    : { x: position.left, y: position.top };\r\n}\r\n\r\nexport function useScrollPosition(effect, deps, element, useWindow, wait) {\r\n  const position = useRef(getScrollPosition({ useWindow }));\r\n\r\n  let throttleTimeout = null;\r\n\r\n  const callBack = () => {\r\n    const currPos = getScrollPosition({ element, useWindow });\r\n    effect({ prevPos: position.current, currPos });\r\n    position.current = currPos;\r\n    throttleTimeout = null;\r\n  };\r\n\r\n  useIsomorphicLayoutEffect(() => {\r\n    if (!isBrowser) {\r\n      return;\r\n    }\r\n\r\n    const handleScroll = () => {\r\n      if (wait) {\r\n        if (throttleTimeout === null) {\r\n          throttleTimeout = setTimeout(callBack, wait);\r\n        }\r\n      } else {\r\n        callBack();\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n      throttleTimeout && clearTimeout(throttleTimeout);\r\n    };\r\n  }, deps);\r\n}\r\n\r\nuseScrollPosition.defaultProps = {\r\n  deps: [],\r\n  element: false,\r\n  useWindow: false,\r\n  wait: null,\r\n};\r\n","import React from \"react\";\r\n\r\nconst useResizeObserver = (ref) => {\r\n  const [dimensions, setDimensions] = React.useState(null);\r\n  React.useEffect(() => {\r\n    const observeTarget = ref.current;\r\n    const resizeObserver = new ResizeObserver((entries) => {\r\n      entries.forEach((entry) => {\r\n        setDimensions(entry.contentRect);\r\n      });\r\n    });\r\n    resizeObserver.observe(observeTarget);\r\n    return () => {\r\n      resizeObserver.unobserve(observeTarget);\r\n    };\r\n  }, [ref]);\r\n  return dimensions;\r\n};\r\n\r\nexport default useResizeObserver;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useScrollPosition } from \"../hooks/useScrollPosition\";\r\nimport useResizeObserver from \"../hooks/useResizeObserver\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport { mainBody, repos, about, skills } from \"../editable-stuff/config.js\";\r\n\r\nconst Navigation = React.forwardRef((props, ref) => {\r\n  // const { showBlog, FirstName } = config;\r\n  const [isTop, setIsTop] = useState(true);\r\n  const [scrollPosition, setScrollPosition] = useState(0);\r\n  const navbarMenuRef = React.useRef();\r\n  const navbarDimensions = useResizeObserver(navbarMenuRef);\r\n  const navBottom = navbarDimensions ? navbarDimensions.bottom : 0;\r\n  useScrollPosition(\r\n    ({ prevPos, currPos }) => {\r\n      if (!navbarDimensions) return;\r\n      currPos.y + ref.current.offsetTop - navbarDimensions.bottom > 5\r\n        ? setIsTop(true)\r\n        : setIsTop(false);\r\n      setScrollPosition(currPos.y);\r\n    },\r\n    [navBottom]\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    if (!navbarDimensions) return;\r\n    navBottom - scrollPosition >= ref.current.offsetTop\r\n      ? setIsTop(false)\r\n      : setIsTop(true);\r\n  }, [navBottom, navbarDimensions, ref, scrollPosition]);\r\n\r\n  return (\r\n    <Navbar\r\n      ref={navbarMenuRef}\r\n      className={` fixed-top  ${\r\n        !isTop ? \"navbar-white\" : \"navbar-transparent\"\r\n      }`}\r\n      expand=\"lg\"\r\n    >\r\n      <Navbar.Brand className=\"brand\" href={process.env.PUBLIC_URL + \"/#home\"}>\r\n        {`<${mainBody.firstName} />`}\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className=\"toggler\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          {/* {\r\n            <Nav.Link className=\"nav-link lead\">\r\n              <Link to={process.env.PUBLIC_URL + \"/blog\"}>Blog</Link>\r\n            </Nav.Link>\r\n          } */}\r\n          {repos.show && (\r\n            <Nav.Link\r\n              className=\"nav-link lead\"\r\n              href={process.env.PUBLIC_URL + \"/#projects\"}\r\n            >\r\n              Projecten\r\n            </Nav.Link>\r\n          )}\r\n          {about.show && (\r\n            <Nav.Link\r\n              className=\"nav-link lead\"\r\n              href={process.env.PUBLIC_URL + \"/#aboutme\"}\r\n            >\r\n              Over mezelf\r\n            </Nav.Link>\r\n          )}\r\n          {skills.show && (\r\n            <Nav.Link\r\n              className=\"nav-link lead\"\r\n              href={process.env.PUBLIC_URL + \"/#skills\"}\r\n            >\r\n              Skills\r\n            </Nav.Link>\r\n          )}\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n});\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\r\n\r\nfunction SkillsBar({ skill, value, isScrolled }) {\r\n  return (\r\n    <div style={{ width: \"95%\" }}>\r\n      <p className=\"lead mb-1 mt-2\">{skill}</p>\r\n      <ProgressBar\r\n        className={!isScrolled ? \"progress\" : \" progress-bar-animation\"}\r\n        now={value}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SkillsBar;\r\n","import React from \"react\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport SkillsBar from \"./SkillsBar\";\r\n\r\nfunction SkillsSection({ skills, isScrolled }) {\r\n  return (\r\n    <>\r\n      {skills.map((skill, index) => (\r\n        <SkillsBar\r\n          key={`${skill}-${index}`}\r\n          skill={skill.name}\r\n          value={skill.value}\r\n          isScrolled={isScrolled}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction SkillsTab({ skills, isScrolled }) {\r\n  return (\r\n    <>\r\n      <Col xs={12} md={6}>\r\n        <SkillsSection\r\n          skills={skills.slice(0, Math.floor(skills.length / 2))}\r\n          isScrolled={isScrolled}\r\n        />\r\n      </Col>\r\n      <Col xs={12} md={6}>\r\n        <SkillsSection\r\n          skills={skills.slice(Math.floor(skills.length / 2), skills.length)}\r\n          isScrolled={isScrolled}\r\n        />\r\n      </Col>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SkillsTab;\r\n","import React from \"react\";\r\nimport Tab from \"react-bootstrap/Tab\";\r\nimport Tabs from \"react-bootstrap/Tabs\";\r\nimport SkillsTab from \"./SkillsTab\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { Jumbotron, Container } from \"react-bootstrap\";\r\nimport { useScrollPosition } from \"../../hooks/useScrollPosition\";\r\n\r\nfunction Skills({ heading, hardSkills, softSkills }) {\r\n  const skillsTabRef = React.useRef();\r\n  const [isScrolled, setIsScrolled] = React.useState(false);\r\n  //const navbarDimensions = useResizeObserver(navbarMenuRef);\r\n\r\n  useScrollPosition(\r\n    ({ prevPos, currPos }) => {\r\n      if (!isScrolled && currPos.y - 400 < 0) setIsScrolled(true);\r\n    },\r\n    [],\r\n    skillsTabRef\r\n  );\r\n  return (\r\n    <Jumbotron ref={skillsTabRef} fluid className=\"bg-white m-0\" id=\"skills\">\r\n      <Container className=\"p-5 \">\r\n        <h2 ref={skillsTabRef} className=\"display-4 pb-5 text-center\">\r\n          {heading}\r\n        </h2>\r\n        <Tabs\r\n          className=\"skills-tabs\"\r\n          defaultActiveKey=\"hard-skills\"\r\n          id=\"skills-tabs\"\r\n        >\r\n          <Tab\r\n            tabClassName=\"skills-tab lead\"\r\n            eventKey=\"hard-skills\"\r\n            title=\"Technische Skills\"\r\n          >\r\n            <Row className=\"pt-3 px-1\">\r\n              <SkillsTab skills={hardSkills} isScrolled={isScrolled} />\r\n            </Row>\r\n          </Tab>\r\n          {/* <Tab\r\n            tabClassName=\"skills-tab lead\"\r\n            eventKey=\"soft-skills\"\r\n            title=\"Soft Skills\"\r\n          >\r\n            <Row className=\"pt-3 px-1\">\r\n              <SkillsTab skills={softSkills} isScrolled={isScrolled} />\r\n            </Row>\r\n          </Tab> */}\r\n        </Tabs>\r\n      </Container>\r\n    </Jumbotron>\r\n  );\r\n}\r\n\r\nexport default Skills;\r\n","import React from \"react\";\r\n\r\nconst GetInTouch = ({ heading, message, email }) => {\r\n  return (\r\n    <>\r\n      <h2 className=\"display-4 pb-3 text-center\">{heading}</h2>\r\n      <p className=\"lead text-center pb-3\">\r\n        {message}, <a href={`mailto:${email}`}>{email}</a>.\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GetInTouch;\r\n","import React, { useState, useEffect, Profiler } from \"react\";\r\nimport Carousel from \"react-bootstrap/Carousel\";\r\n\r\nconst Leadership = ({ heading, message, img, imageSize }) => {\r\n  return (\r\n    <div\r\n      id=\"leadership\"\r\n      className=\"jumbotron jumbotron-fluid m-0\"\r\n      style={{ backgroundColor: \"white\" }}\r\n    >\r\n      <div className=\"container container-fluid\">\r\n        <h2 className=\"display-4 pb-5 text-center\">{heading}</h2>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-5\">\r\n            <p className=\"lead\">{message}</p>\r\n          </div>\r\n          <div className=\"col-md-7\">\r\n            <Carousel>\r\n              {img.map((value, index) => {\r\n                return (\r\n                  <Carousel.Item>\r\n                    <img\r\n                      className=\"d-block w-100\"\r\n                      src={value.img}\r\n                      alt=\"First slide\"\r\n                      width={imageSize.width}\r\n                      height={imageSize.height}\r\n                    />\r\n                    <Carousel.Caption>\r\n                      <h3>{value.label}</h3>\r\n                      <p>\r\n                        {value.paragraph}\r\n                      </p>\r\n                    </Carousel.Caption>\r\n                  </Carousel.Item>\r\n                );\r\n              })}\r\n            </Carousel>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Leadership;\r\n","import React from 'react';\r\n\r\nimport { \r\n    Col,\r\n    Card\r\n } from \"react-bootstrap\";\r\nconst ExperienceCard = ({data}) => {\r\n    return ( \r\n        <Col lg=\"6\">\r\n            <div className=\"pb-5 text-center\">\r\n                <img className=\" bg-white mb-3\" src={data.companylogo} alt=\"\"/>\r\n                <p className=\"lead\">\r\n                    {data.role}\r\n                    <br/>\r\n                    {data.date}\r\n                </p>\r\n                \r\n            </div>\r\n        </Col>\r\n     );\r\n}\r\n \r\nexport default ExperienceCard;","import React from 'react';\r\nimport ExperienceCard from \"./ExperienceCard\";\r\nimport {\r\n    Container,\r\n    Row,\r\n    Jumbotron\r\n} from \"react-bootstrap\";\r\n\r\nconst Experience = ({experiences}) => {\r\n    return (  \r\n        <section className=\"section\">\r\n            <Container>\r\n                <Jumbotron fluid className=\"bg-white\">\r\n                    <h2 className=\"display-4 mb-5 text-center\">\r\n                        {experiences.heading}\r\n                    </h2>\r\n                    <Row>\r\n                        {\r\n                            experiences.data.map(data => {\r\n                                return <ExperienceCard key={data.company} data={data} />\r\n                            })\r\n                        }\r\n                    </Row>\r\n                </Jumbotron>\r\n            </Container>\r\n        </section>\r\n    );\r\n}\r\n \r\nexport default Experience;","import React from \"react\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport {\r\n  navBar,\r\n  mainBody,\r\n  about,\r\n  repos,\r\n  leadership,\r\n  skills,\r\n  getInTouch,\r\n  experiences\r\n} from \"./editable-stuff/config.js\";\r\nimport MainBody from \"./components/home/MainBody\";\r\nimport AboutMe from \"./components/home/AboutMe\";\r\nimport Project from \"./components/home/Project\";\r\nimport Footer from \"./components/Footer\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Skills from \"./components/home/Skills\";\r\n// import { Blog } from \"./components/blog/Blog\";\r\n// import BlogPost from \"./components/blog/BlogPost\";\r\nimport GetInTouch from \"./components/home/GetInTouch.jsx\";\r\nimport Leadership from \"./components/home/Leadership.jsx\";\r\n\r\nimport Experience from \"./components/home/Experience\";\r\n\r\nconst Home = React.forwardRef((props, ref) => {\r\n  return (\r\n    <>\r\n      <MainBody\r\n        gradient={mainBody.gradientColors}\r\n        title={`${mainBody.firstName} ${mainBody.middleName} ${mainBody.lastName}`}\r\n        message={mainBody.message}\r\n        icons={mainBody.icons}\r\n        ref={ref}\r\n      />\r\n      {about.show && (\r\n        <AboutMe\r\n          heading={about.heading}\r\n          message={about.message}\r\n          link={about.imageLink}\r\n          imgSize={about.imageSize}\r\n          resume={about.resume}\r\n        />\r\n      )}\r\n      {\r\n        experiences.show && (\r\n          <Experience experiences={experiences}/>\r\n        )\r\n      }\r\n      {repos.show && (\r\n        <Project\r\n          heading={repos.heading}\r\n          username={repos.gitHubUsername}\r\n          length={repos.reposLength}\r\n          specfic={repos.specificRepos}\r\n        />\r\n      )}\r\n      {leadership.show && (\r\n        <Leadership\r\n          heading={leadership.heading}\r\n          message={leadership.message}\r\n          img={leadership.images}\r\n          imageSize={leadership.imageSize}\r\n        />\r\n      )}\r\n      {skills.show && (\r\n        <Skills\r\n          heading={skills.heading}\r\n          hardSkills={skills.hardSkills}\r\n          softSkills={skills.softSkills}\r\n        />\r\n      )}\r\n      \r\n    </>\r\n  );\r\n});\r\n\r\nconst App = () => {\r\n  const titleRef = React.useRef();\r\n\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL + \"/\"}>\r\n      {navBar.show && <Navbar ref={titleRef} />}\r\n      <Route path=\"/\" exact component={() => <Home ref={titleRef} />} />\r\n      {/* {false && <Route path=\"/blog\" exact component={Blog} />}\r\n      {false && <Route path=\"/blog/:id\" component={BlogPost} />} */}\r\n      <Footer>\r\n        {getInTouch.show && (\r\n          <GetInTouch\r\n            heading={getInTouch.heading}\r\n            message={getInTouch.message}\r\n            email={getInTouch.email}\r\n          />\r\n        )}\r\n      </Footer>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let\"s check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can\"t reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./scss/custom.scss\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/resume.9d3da0e2.pdf\";"],"sourceRoot":""}